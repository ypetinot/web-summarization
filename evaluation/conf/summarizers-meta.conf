# Note : each block gets a single configuration that is updated (if needed) with system-specific settings
{
	"title": {
		"handler": "title-summarizer/bin/run-summarizer"
		},
	"delort": {
		"handler": "delort-summarizer/bin/run-summarizer"
#		"base-configuration": "delort-summarizer/conf/configuration.json"
		},
	"graph4-ranking": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"base-systems": [ "wg-baseline-retrieval" , "graph4-baseline-ranking" , "wg-baseline-ranking-min" , "wg-baseline-ranking-max" ],
		"parameter-ranges": {
			# Note : we only vary the similarity field for regular ranking systems (not upper/lower bounds since these have direct access to the summary field)
			"^graph4" : {
				"reference_ranker_class": [
					"WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
					"WordGraph::ReferenceRanker::ReferenceTargetJointProbability"
					],
				"reference_ranker_params/similarity_field" : [ "content" , "title" , "url" , "anchortext" ]
			},
			# Note : we experiment with all available fields for retrieval
			".*" : {
			        "reference_collector_params/index_query_field" : [ "content_rendered" , "title" , "description" ]
			}
		}
	},
	"graph4-ranking-new-configuration": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [
			   { "id": "wg-baseline-retrieval" , "sub_id" : "baseline-ranking" },
			   { "id": "graph4-baseline-ranking" , "sub_id" : "baseline-ranking" },
			   { "id": "wg-baseline-ranking-min" , "sub_id" : "baseline-ranking" },
			   { "id": "wg-baseline-ranking-max" , "sub_id" : "baseline-ranking" }
			   ],
		"parameter-ranges": {
			# Note : we only vary the similarity field for regular ranking systems (not upper/lower bounds since these have direct access to the summary field)
			"^graph4" : {
				"reference_ranker_class": [
					"WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
					"WordGraph::ReferenceRanker::ReferenceTargetJointProbability"
					],
				"reference_ranker_params/similarity_field" : [ "content" , "title" , "url" , "anchortext" ]
			},
			# Note : we experiment with all available fields for retrieval
			".*" : {
			        "reference_collector_params/index_query_field" : [ "content_rendered" , "title" , "description" ]
			}
		}
	},
	"graph4-ranking-combined": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [
				[ "wg-baseline-retrieval" ] ,
				[ "graph4-baseline-ranking-combined" ] ,
				[ "graph4-joint-ranking-combined" ] ,
				[ "wg-baseline-ranking-min" ] ,
				[ "wg-baseline-ranking-max" ] 
			],
		"parameter-ranges": {
			# Note : we experiment with all available fields for retrieval
			".*" : {
			        "reference_collector_params/index_query_field" : [ "content_rendered" , "title" , "description" ]
			}
		}
	},
	# CURRENT : append one extra id level ?
	"adaptation": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "baseline-ranking" },
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "no-compression" },
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-no-compression" },
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-no-compression" },
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-compression" },
			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-compression" },
			     { "id": "graph4-adaptation-extractive-hungarian" }
			   ],
	},
	"adaptation-category": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [ { "id" : "graph4-adaptation-extractive-hungarian" ,
			       "configuration_update" : {
					"reference_collector_class": "WordGraph::ReferenceCollector::CategoryOracleCollector"
					} ,
			       "sub_id" : "baseline-ranking" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" },
		           ]
	},
	# TODO : we could add inheritance here as well => extend Web::Summarizer::Configuration for this ?
	"adaptation-oracle-retrieval": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		# TODO : encapsulate this ranker configuration into a dedicated class ( WordGraph::ReferenceRanker::Oracle )
		"systems": [ 
			     { "id" : "graph4-adaptation-extractive-hungarian" , "configuration_update" : {
								"reference_ranker_class": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
								"reference_ranker_params": {
												"similarity_field": "summary",
					   						   	"use_lcs_similarity": 1
										   },
###								"target_adapter_post_ranking": 1,
###								"target_adapter_post_ranking_oracle": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity"
							    } , "sub_id" : "baseline-ranking" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" },
		           ]
	},
	"adaptation-oracle-category": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [ { "id" : "graph4-adaptation-extractive-hungarian" , "configuration_update" : {
								"reference_collector_class": "WordGraph::ReferenceCollector::CategoryOracleCollector",
								"reference_ranker_class": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
								"reference_ranker_params": {
												"similarity_field": "summary",
					   						   	"use_lcs_similarity": 1,
												"max_count": 20
											   },
###								"target_adapter_post_ranking": 1,
###								"target_adapter_post_ranking_oracle": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity"
							    } , "sub_id" : "baseline-ranking" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-no-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-replacement-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" , "sub_id" : "hybrid-title-concatenation-compression" },
			     { "id" : "graph4-adaptation-extractive-hungarian" },
		           ]
	},
	"adaptation-fusion": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [
#			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "baseline-ranking" },
#			     { "id": "graph4-adaptation-extractive-hungarian" , "sub_id" : "no-compression" },
#			     { "id": "graph4-adaptation-extractive-hungarian" },
			     { "id": "filippova-basic" }
			   ],
	},
	"adaptation-oracle-category-5": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [ [ "graph4-baseline-ranking" , {
				"reference_collector_class": "WordGraph::ReferenceCollector::CategoryFileCollector",
				"reference_collector_params": {
							      "data_file": "/proj/nlp/users/ypetinot/experiments/instances/drago-2015-07-08/reference_5.instances"
				},
				"reference_ranker_class": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
				"reference_ranker_params": {
								"similarity_field": "summary",
					   			"use_lcs_similarity": 1,
								"max_count": 20
							}
							    } ],
			     [ "graph4-adaptation-extractive-viterbi" ],
			     [ "graph4-adaptation-extractive-hungarian" ],
		           ]

	},
	"adaptation-oracle-category-6": {
		"handler": "graph-summarizer-4/bin/run-summarizer",
		"base-configuration": "graph-summarizer-4/conf/configuration.json",
		"systems": [ [ "graph4-baseline-ranking" , {
				"reference_collector_class": "WordGraph::ReferenceCollector::CategoryFileCollector",
				"reference_collector_params": {
							      "data_file": "/proj/nlp/users/ypetinot/experiments/instances/drago-2015-07-08/reference_6.instances"
				},
				"reference_ranker_class": "WordGraph::ReferenceRanker::SymmetricTargetSimilarity",
				"reference_ranker_params": {
								"similarity_field": "summary",
					   			"use_lcs_similarity": 1,
								"max_count": 20
							}
							    } ],
			     [ "graph4-adaptation-extractive-viterbi" ],
			     [ "graph4-adaptation-extractive-hungarian" ],
		           ]

	},

	# Note : only use this configuration to transform non-structural parameters => cleaner
	# Set parameter at any level and create new pipeline => label

	# individual system configuration (configuration.json) => ok since it fully defines a single system configuration
	# programmatically generate list of summarizers
	
	# what would be the most convenient for me ?
	# => blocks of vertically inherited systems => this is how you show improvements and test for significance from one level to the next => significance testing in table could be either compared to a common baseline or to the previous line => i can currently create core systems that inherit from each other in somewhat complex ways => ok
	# => reproduce full inheritance column with modified intermediary - structural - changes
	# => parameter sweep => ok

	# [ type-of-collector , type-of-ranker , type-of-adapter , enable-reranking ]

	# => how to implement these ?
	#    => vary retriever and ranker for all systems ? => that's the easier solution => only if the rankers are fully encapsulated
	#    => add option to run regular base

}

# Note: only for fusion experiments
###			"^(?:.(?!baseline))+$" : {
###			    	"roles/WordGraph::Decoder::.*/reference_construction_limit": { "from" : 1 , "to" : 5 , "step" : 1 }
###			},
