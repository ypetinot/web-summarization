# TODO : "makescript" ?

MAKEFILE_DIR:=$(dir $(lastword $(MAKEFILE_LIST)))
ROOT_DIST:=$(MAKEFILE_DIR)/../../
BINDIR_DIST:=$(ROOT_DIST)/bin/
include $(BINDIR_DIST)/makefile.common

ifndef ROOT_EVALUATION
$(error $(LINE_HEADING) No evaluation root provided, cannot proceed ...)
else
$(info $(LINE_HEADING) evaluation root: $(ROOT_EVALUATION))
endif

ifndef 	EXPERIMENT_DIRECTORY_EVALUATION_RAW
$(error $(LINE_HEADING) Experiment raw output file is undefined ...)
endif

SIGNIFICANCE_DIRECTORY=$(ROOT_EVALUATION)/significance/
SIGNIFICANCE_OUT=$(SIGNIFICANCE_DIRECTORY)/significance.out
SIGNIFICANCE_RAWS_DIRECTORY=$(SIGNIFICANCE_DIRECTORY)/system-raws/
SIGNIFICANCE_SYSTEMS_DIRECTORY=$(SIGNIFICANCE_DIRECTORY)/systems/

FIELDS=$(shell find $(SIGNIFICANCE_RAWS_DIRECTORY)/ -type f | awk -F'\.' '{ print $$NF }' | sort -u | tr '\n' ' ')

# TODO : reorganize so we have separate rules/recipes for these two targets
###$(SYSTEM_PAIRINGS) $(SIGNIFICANCE_OUT): $(SIGNIFICANCE_RAWS_DIRECTORY)
###	$(MAKEFILE_DIR)/run-experiment-evaluation-pair-systems ${SIGNIFICANCE_RAWS_DIRECTORY} $@ | ${MAKEFILE_DIR}/run-experiment-evaluation-pair-significance $(FIELDS)
###> $(SIGNIFICANCE_OUT)

# CURRENT : check the number of pairwise jobs that are being generated by this ...
## Note : this becomes the default rule if used in a standalone fashion
# TODO : add dependency on SIGNIFICANCE_RAWS_DIRECTORY back ?
$(SIGNIFICANCE_OUT): $(SIGNIFICANCE_SYSTEMS_DIRECTORY)
	$(MAKEFILE_DIR)/run-experiment-evaluation-pair-systems ${SIGNIFICANCE_SYSTEMS_DIRECTORY} $(SIGNIFICANCE_RAWS_DIRECTORY) | ${MAKEFILE_DIR}/run-experiment-evaluation-pair-significance $(FIELDS) > $(SIGNIFICANCE_OUT)

# generate per-system raws
# TODO : turn this into a recipe for the individual raws ?
$(SIGNIFICANCE_RAWS_DIRECTORY): $(EXPERIMENT_DIRECTORY_EVALUATION_RAW)
	mkdir -p $@
	cat $< | $(MAKEFILE_DIR)/run-experiment-evaluation-split-raw $@

$(SIGNIFICANCE_SYSTEMS_DIRECTORY): $(SIGNIFICANCE_RAWS_DIRECTORY)
	mkdir -p $@
	find $(SIGNIFICANCE_RAWS_DIRECTORY)/ -mindepth 1 -maxdepth 1 | awk -F"\/" '{ print $$NF }' | awk -F"\." '{ print $$1 }' | sort -u | awk -F"\#" -v systems_directory=$@ '{ print $$0 >> systems_directory "\/" $$1 ; }'

$(SIGNIFICANCE_DIRECTORY):
	mkdir -p $@
