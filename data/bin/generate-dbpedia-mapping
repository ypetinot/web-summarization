#!/usr/bin/env perl

use strict;
use warnings;

use FindBin;
use lib "${FindBin::Bin}/../src/perl/";
use lib "${FindBin::Bin}/../third-party/local/lib/";

use Getopt::Long;
use JSON;
use Pod::Usage;

my $help = 0;
my $man = 0;

Getopt::Long::Configure ("bundling");

GetOptions('help|?' => \$help, man => \$man) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-exitstatus => 0, -verbose => 2) if $man;

my $current = undef;
my $current_title = undef;
my @buffer;

my $i = 0;

print "[\n";

while ( <STDIN> ) {
    
    chomp;

    my $line = $_;
    my @fields = split /\s+/, $line;
    
    if ( scalar(@fields) != 2 ) {
	next;
    }
    
    my $entity = shift @fields;
    my $category = shift @fields;

    if ( ( $i++ ) % 10000 == 0 ) {
	print STDERR ">> processing $i ...\n";
    }

    if ( !defined($current) || $current ne $entity ) {
	if ( scalar(@buffer) ) {
	    _output( $current , $current_title , \@buffer );
	    print ",\n";
	}
	@buffer = ();
	$current = $entity;
	$current_title = _title( $entity );
    }
    
    push @buffer, $category;
    
}

if ( scalar(@buffer) ) {
    _output( $current , $current_title , \@buffer );
}

print "]\n";

sub _output {

    my $key = shift;
    my $title = shift;
    my $value = shift;

    print encode_json( { 'id' => $key , 'title' => $title , 'value' => $value } );

}

sub _title {

    my $url = shift;
    
    my @url_components = split /\//, $url;
   
    my $title = pop @url_components;
    $title =~ s/_/ /g;
   
    return $title;

}

1;
